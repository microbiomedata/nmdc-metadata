## author: Bill Duncan
## summary: 
## The yaml file contains metadata about the data sources used during the NMDC ETL process.
## The classes section provided metadata needed to create a BiolinkML class used during ETL.
## The data_sources section gives metadata needed to load an NMDC data source.
## See details in each section.
  
classes:
  ## The keys for classes are used as follows:
  ## - type: 
  ##      provides the type of entity the class represents 
  ##      maps to the class in the NMDC yaml file 
  ## - constructor: 
  ##      provides a dictionary of the paramaters (keys) and values necessary to instantiate the class
  ## - attributes:
  ##     provides a list the attributes/propeties associated with the class 
  ##
  ##     When the attribute is a simple name (e.g., principal_investigator_name) the ETL output a key value pair. E.g.: 
  ##
  ##        "principal_investigator_name": "Matthias Hess"
  ##
  ##     The default datatype of the value is a string, but other datatypes can be specified by including a comma between the attributre and the datatype.
  ##     For example, the attribute specification: 
  ##
  ##        file_size_bytes, int 
  ##
  ##     produces:
  ##
  ##        "file_size_bytes": 12060043683
  ##
  ##     If the value of key needs to be an object, you specify the keys and values of the object in a dictionary. 
  ##     The type is of the object is specified using the $class_type key.
  ##     For example, the attribute specification:
  ## 
  ##        omics_type: {has_raw_value: omics_type, $class_type: AttributeValue} 
  ##
  ##     produces:
  ##
  ##        "omics_type": {"has_raw_value": "Metabolomics", "type": "nmdc:AttributeValue"}
  ##
  ##     Other types value can also be specified as needed. 
  ## 
  ##     If you need to specify which values are necessary to build an object, you use $init and $class_type keys as follows:
  ##          - the $init key contains a dict of key/value pairs needed to initialize the object
  ##          - the $class_type key refers to the type of object to create
  ##     E.g.: {part_of: {$init: {id: study_gold_id}, $class_type: Study}]} outputs:
  ##
  ##          "part_of": { "id": "gold:Gs0112340", "$class_type": "nmdc:Study"}
  ## 
  ##     In many cases, an attribute will have a one-to-many relation. For these cases, the value of the attribute is a a list. 
  ##     If the attribute specification is given using a simple "name: [field]" syntax, the value the field is placed between the brackets.
  ##     For example, the attribute specification:
  ##
  ##        has_input: [biosample_id]
  ##
  ##     produces:
  ##
  ##        "has_input": ["gold:Gb0095970"]
  ##
  ##    If you want the values, to split into a list, you specifiy the field and the character to split on like so:
  ##
  ##       has_output: [{field: data_object_id, split_val: ','}]
  ##
  ##    If the data_object_id field contained the value "jgi:551a20d30d878525404e90d5,jgi:551a20d50d878525404e90d7", the output would be:
  ##
  ##       "has_output": ["jgi:551a20d30d878525404e90d5", "jgi:551a20d50d878525404e90d7"]
  ##
  ##    If a list of objects is need, you use the $init ad class_type keys within the dictionary as described above.
  ##    In this case, $init field values are split on the comma character.
  ##    E.g.: {has_output: [{$init: {id: output_file_ids}, $class_type: DataObject}]} outputs
  ##
  ##          "has_output": [
  ##              {
  ##                "id": "jgi:551a20d30d878525404e90d5",
  ##                "class_type": "nmdc:DataObject"
  ##              },
  ##              {
  ##                "id": "jgi:551a20d90d878525404e90e1",
  ##                "class_type": "nmdc:DataObject"
  ##              }
  ##            ]
  ##
  ##    For some objects a constant values may need to be specified; e.g., depth has unit 'meter'.
  ##    To do this, the value inside the dict is also a dict; e.g."has_unit: {const: meter}" in:
  ##    
  ##       depth: {has_numeric_value: "depth, float", has_unit: {const: meter}, has_raw_value: depth, class_type: QuantityValue}
  ##
  ##    sets the value of the 'has unit' slot to 'meter'. The 'const' key is only a mnemonic device. In the code, the constant value
  ##    is set to whatever the value is regardless of the key.
  ##
  ##    Internally, using '$init' and '$class_type' as keys within the attribute's value (i.e. attribute: {$init: {...}, $class_type: ...})
  ##    produces an instance of have object. NB: '$init' MUST always be used with '$class_type'
  ##    If the '$init' key is not present, a dict is produced.
  ##
  ##    For example, if the depth attribute is specified using '$init' and '$class_type' as:
  ##
  ##    depth: 
  ##        $init:
  ##          has_numeric_value: depth, float
  ##          has_unit: {const: meter}
  ##          has_raw_value: depth
  ##        $class_type: QuantityValue
  ##    
  ##    The internal representation of the output of an object of depth '29' will be:
  ##
  ##      depth=QuantityValue(has_raw_value='29.0', has_unit='meter', has_numeric_value=29.0)
  ##
  ##    But, if the '$init' is omitted like this:
  ##       
  ##      depth: 
  ##          has_numeric_value: depth, float
  ##          has_unit: {const: meter}
  ##          has_raw_value: depth
  ##
  ##     The internal representation will be a dict:
  ##
  ##        depth={'has_raw_value': 29.0, 'has_unit': 'meter', 'has_numeric_value': 29.0}
  ##
  ##     Using the dict option (i.e., w/o 'inti') is quite flexible. For exmaple, if you add "type: QuantityValue"
  ##     to the above example using depth, it will produce:
  ##
  ##        depth={'has_raw_value': 29.0, 'has_unit': 'meter', 'has_numeric_value': 29.0, 'type': 'QuantityValue'}
  ##
  ##     This allows for a lot of flexibility for adding extra information to the attribute values.
  ##     However, you CANNOT use '$init' and '$class_type' as exta informational keys. Those keys are reserved for
  ##     creating objects and will result in an error.

  
  gold_study:
    type: study
    constructor:
      id: gold_id
      name: study_name
      description: description
    attributes:
      - principal_investigator_name:
          has_raw_value: principal_investigator_name
      - ecosystem
      - ecosystem_category
      - ecosystem_type
      - ecosystem_subtype
      - specific_ecosystem
      - doi:
          has_raw_value: doi
  
  gold_omics_processing:
    type: omics processing
    constructor:
      id: gold_id
      name: project_name
      description: description
    attributes:
      - part_of: [study_gold_id]
      - has_input: [biosample_gold_id]
      - has_output: [output_file_ids]
      - add_date 
      - mod_date
      - completion_date 
      - ncbi_project_name 
      - omics_type:
          has_raw_value: omics_type
      - principal_investigator_name:
          has_raw_value: principal_investigator_name
      - processing_institution
   
  emsl_omics_processing:
    type: omics processing
    constructor:
      id: dataset_id
      name: dataset_name
      description: dataset_type_description
    attributes:
      - omics_type:
          has_raw_value: omics_type
      - instrument_name
      - processing_institution
      - part_of: [gold_study_id]
      - has_output: [data_object_id]
      - has_input: [biosample_gold_ids]
      
  emsl_data_object:
    type: data object
    constructor:
      id: data_object_id
      name: data_object_name
      description: dataset_type_description
    attributes:
      - file_size_bytes, int
  
  jgi_data_object:
    type: data object
    constructor:
      id: file_id
      name: file_name
      description: file_type_description
    attributes:
      - file_size_bytes, int

  gold_biosample:
    type: biosample
    constructor:
      id: gold_id
      name: biosample_name
      description: description
      env_broad_scale: 
        has_raw_value: env_broad_scale
      env_local_scale: 
        has_raw_value: env_local_scale
      env_medium: 
        has_raw_value: env_medium
      lat_lon: 
        latitude: latitude
        longitude: longitude
        has_raw_value: lat_lon
    transforms:
      pre:
        - function: test_pre_transform
          attributes:
            - test_attribute
      post:
        # note: attribute names must match names in nmdc.yaml
        - function: make_quantity_value
          attributes:
            - chlorophyll
            - nitrate
            - pressure
            - samp_vol_we_dna_ext
    attributes:
      - add_date
      - mod_date
      - collection_date:
          has_numeric_value: collection_date # mixs:collection_date
      - ecosystem
      - ecosystem_category
      - ecosystem_type
      - ecosystem_subtype
      - specific_ecosystem
      - habitat
      - location
      - community
      - ncbi_taxonomy_name
      - geographic_location:
          has_raw_value: geographic_location
      - sample_collection_site
      - identifier
      - host_name
      - depth: 
          has_raw_value: depth
          has_numeric_value: depth, float # mixs:depth
          # has_unit: {$const: meter}
          has_unit: meter
      - subsurface_depth:
          has_raw_value: subsurface_depth
          has_numeric_value: subsurface_depth, float
          # has_unit: {$const: meter}
          has_unit: meter
      - altitude:
          has_raw_value: altitude
          has_numeric_value: altitude, float # mixs:alt
          # has_unit: {$const: meter}
          has_unit: meter
      - proport_woa_temperature
      - biogas_temperature
      - growth_temperature:
          has_raw_value: growth_temperature # mixs:temp
          # has_unit: {$const: Celsius}
          has_unit: Celsius
          has_numeric_value: growth_temperature, float
      - water_samp_store_temp:
          has_raw_value: water_samp_store_temp # mixs:samp_store_temp
          # has_unit: {$const: Celsius}
          has_unit: Celsius
          has_numeric_value: water_samp_store_temp, float
      - biogas_retention_time
      - salinity_category
      - pressure:
          has_raw_value: pressure # mixs:pressure
      - ph:
          has_raw_value: ph # mixs:ph
      - chlorophyll_concentration:
          has_raw_value: chlorophyll_concentration # mixs:chlorophyll
      - nitrate_concentration:
          has_raw_value: nitrate_concentration # mixs:nitrate
      - oxygen_concentration:
          has_raw_value: oxygen_concentration # mixs:diss_oxygen
      - salinity_concentration:
          has_raw_value: salinity_concentration # mixs:salinity
      - sample_volume:
          has_raw_value: sample_volume # mixs:samp_vol_we_dna_ext
      - sampling_strategy:
          has_raw_value: sampling_strategy
      - soil_link_climate_info:
          has_raw_value: soil_link_climate_info # mixs:link_climate_info
      - soil_misc_param:
          has_raw_value: soil_misc_param # mixs:misc_param
      - soil_tot_n_method:
          has_raw_value: soil_tot_n_method # mixs:tot_nitro_content_meth
      - soil_water_content:
          has_raw_value: soil_water_content # mixs:water_content
      - soil_water_content_soil_meth:
          has_raw_value: soil_water_content_soil_meth
      - soluble_iron_micromol
      - subsurface_depth2
      - tot_nitrogen:
          has_raw_value: tot_nitrogen # mixs:tot_nitro_content
      - tot_org_carbon:
          has_raw_value: tot_org_carbon # mixs:tot_org_carb
      - water_alkalinity:
          has_raw_value: water_alkalinity # mixs:alkalinity
      - water_alkalinity_method:
          has_raw_value: water_alkalinity_method # mixs:alkalinity_method
      - water_alkyl_diethers:
          has_raw_value: water_alkyl_diethers # mixs:alkyl_diethers
      - water_aminopept_act:
          has_raw_value: water_aminopept_act # mixs:aminopept_act
      - water_ammonium:
          has_raw_value: water_ammonium # mixs:ammonium
      - water_bacterial_carbon_prod:
          has_raw_value: water_bacterial_carbon_prod # mixs:bacteria_carb_prod
      - water_bishomohopanol:
          has_raw_value: water_bishomohopanol # mixs:bishomohopanol
      - water_bromide:
          has_raw_value: water_bromide # mixs:bromide
      - water_calcium:
          has_raw_value: water_calcium # mixs:calcium
      - water_carbon_nitrog_ratio:
          has_raw_value: water_carbon_nitrog_ratio # mixs:carb_nitro_ratio
      - water_chem_administration:
          has_raw_value: water_chem_administration # mixs:chem_administration
      - water_chloride:
          has_raw_value: water_chloride # mixs:chloride
      - water_density:
          has_raw_value: water_density # mixs:density
      - water_diether_lipids:
          has_raw_value: water_diether_lipids # mixs:diether_lipids
      - water_diss_carbon_dioxide:
          has_raw_value: water_diss_carbon_dioxide # mixs:diss_carb_dioxide
      - water_diss_hydrogen:
          has_raw_value: water_diss_hydrogen # mixs:diss_hydrogen
      - water_diss_inorg_carbon:
          has_raw_value: water_diss_inorg_carbon # mixs:diss_inorg_carb
      - water_diss_inorg_phosphorus:
          has_raw_value: water_diss_inorg_phosphorus # mixs:diss_inorg_phosp
      - water_diss_org_carbon:
          has_raw_value: water_diss_org_carbon # mixs:diss_org_carb
      - water_diss_org_nitrogen:
          has_raw_value: water_diss_org_nitrogen # mixs:diss_org_nitro
      - water_glucosidase_activity:
          has_raw_value: water_glucosidase_activity # mixs:glucosidase_act
      - water_magnesium:
          has_raw_value: water_magnesium # mixs:magnesium
      - water_mean_frict_vel:
          has_raw_value: water_mean_frict_vel # mixs:mean_frict_vel
      - water_mean_peak_frict_vel:
          has_raw_value: water_mean_peak_frict_vel # mixs:mean_peak_frict_vel
      - water_misc_parameter:
          has_raw_value: water_misc_parameter # mixs:misc_param
      - water_n_alkanes:
          has_raw_value: water_n_alkanes # mixs:n_alkanes
      - water_nitrite:
          has_raw_value: water_nitrite # mixs:nitrite
      - water_org_matter:
          has_raw_value: water_org_matter # mixs:org_matter
      - water_org_nitrogen:
          has_raw_value: water_org_nitrogen # mixs:org_nitro
      - water_organism_count:
          has_raw_value: water_organism_count # mixs:organism_count
      - water_oxy_stat_sample:
          has_raw_value: water_oxy_stat_sample # mixs:oxy_stat_samp
      - water_part_org_carbon:
          has_raw_value: water_part_org_carbon # mixs:part_org_carb
      - water_perturbation:
          has_raw_value: water_perturbation # mixs:perturbation
      - water_petroleum_hydrocarbon:
          has_raw_value: water_petroleum_hydrocarbon # mixs:petroleum_hydrocarb
      - water_phaeopigments:
          has_raw_value: water_phaeopigments # mixs:phaeopigments
      - water_phosplipid_fatt_acid:
          has_raw_value: water_phosplipid_fatt_acid # mixs:phosplipid_fatt_acid
      - water_potassium:
          has_raw_value: water_potassium # mixs:potassium
      - water_redox_potential:
          has_raw_value: water_redox_potential # mixs:redox_potential
      - water_samp_store_dur:
          has_raw_value: water_samp_store_dur # mixs:samp_store_dur
      - water_samp_store_loc:
          has_raw_value: water_samp_store_loc # mixs:samp_store_loc
      - water_size_frac_low:
          has_raw_value: water_size_frac_low # mixs:size_frac_low
      - water_size_frac_up:
          has_raw_value: water_size_frac_up # mixs:size_frac_up
      - water_sodium:
          has_raw_value: water_sodium # mixs:sodium
      - water_sulfate:
          has_raw_value: water_sulfate # mixs:sulfate
      - water_sulfide:
          has_raw_value: water_sulfide # mixs:sulfide
      - water_tidal_stage:
          has_raw_value: water_tidal_stage # mixs:tidal_stage
      - water_tot_depth_water_col:
          has_raw_value: water_tot_depth_water_col # mixs:tot_depth_water_col
      - water_tot_diss_nitro:
          has_raw_value: water_tot_diss_nitro # mixs:tot_diss_nitro
      - water_tot_phosphorus:
          has_raw_value: water_tot_phosphorus # mixs:tot_phosp
      - water_turbidity:
          has_raw_value: water_turbidity # mixs:turbidity

data_sources:
  ## The keys for the data sources are used as follows:
  ## id_key: 
  ##   defines the field in the data that is used as an id for the record
  ## data_source:
  ##   defines where the data is located
  ##     - file_name: the name of a file
  ##     - file_type: how the file formated; e.g. tsv, csv, excel
  ##     - file_archive_name: define a zip or other compressed file that contains the file
  ##   sub_cols:
  ##      defines a set of columns that will returned
  ##   filters:
  ##     define how the original data source should be filtered (records included/exclued)
  ##     when the data source is extracted
  ##  append_columns:
  ##     defines new columns to append to the extracted dataset
  ##  rename_slots:
  ##     defines fields that will be renamed as part of the data extraction process
  ##     this is often necessary for harmonizing data
  
  study_table:
    id_key: study_id
    data_source:
      file_name: "NMDC_DUMP/STUDY_DATA_TABLE.dsv"
      file_type: tsv
      file_archive_name: "../data/GOLD_NMDC_DUMP_10162020.zip"
    filters:
      - include:
          field: gold_id
          values:
            - Gs0110115
            - Gs0110132
            - Gs0112340
            - Gs0114675
            - Gs0128849
            - Gs0130354
            - Gs0114298
            - Gs0114663
            - Gs0120351
            - Gs0134277
            - Gs0133461
            - Gs0135152
            - Gs0135149
      - include:
          field: active
          values: ['Yes']
              
  contact_table:
    id_key: contact_id
    data_source:
      file_name: "NMDC_DUMP/CONTACT_DATA_TABLE.dsv"
      file_type: tsv
      file_archive_name: "../data/GOLD_NMDC_DUMP_10162020.zip"
    rename_slots:
      - old_name: name
        new_name: principal_investigator_name
            
  proposals_table:
    id_key: jgi_id
    data_source:
      file_name: "../data/JGI-EMSL-FICUS-proposals.fnl.tsv"
      file_type: tsv
    subset_cols:
      - jgi_id
      - gold_study
      - doi
 
  project_table:
    id_key: project_id
    data_source:
      file_name: "NMDC_DUMP/PROJECT_DATA_TABLE.dsv"
      file_type: tsv
      file_archive_name: "../data/GOLD_NMDC_DUMP_10162020.zip"
    filters:              
      - include:
          field: active
          values: ['Yes']
      - exclude:
          field: sequencing_strategy
          values: ['Whole Genome Sequencing']
    append_columns:
      - name: processing_institution
        value: Joint Genome Institute
    rename_slots:
      - old_name: sequencing_strategy
        new_name: omics_type

  project_biosample_table:
    data_source:
      file_name: "NMDC_DUMP/PROJECT_BIOSAMPLE_DATA_TABLE.dsv"
      file_type: tsv
      file_archive_name: "../data/GOLD_NMDC_DUMP_10162020.zip"
    
  biosample_table:
    id_key: biosample_id
    data_source:
      file_name: "NMDC_DUMP/BIOSAMPLE_DATA_TABLE.dsv" 
      file_type: tsv
      file_archive_name: "../data/GOLD_NMDC_DUMP_10162020.zip"
    filters:              
      - include:
          field: active
          values: ['Yes']
    subset_cols:
      - biosample_id
      - soil_package_id
      - water_package_id
      - gold_id
      - biosample_name
      - description
      - add_date
      - mod_date
      - sample_collection_year
      - sample_collection_month
      - sample_collection_day
      - sample_collection_hour
      - sample_collection_minute
      - latitude
      - longitude
      - ecosystem
      - ecosystem_category
      - ecosystem_type
      - ecosystem_subtype
      - specific_ecosystem
      - env_broad_scale
      - env_local_scale
      - env_medium
      - habitat
      - location
      - community
      - ncbi_taxonomy_name
      - geographic_location
      - sample_collection_site
      - identifier
      - host_name
      - depth # BIOSAMPLE, MICROBIAL_MAT_PACKAGE, PLANT_PACKAGE, SEDIMENT_PACKAGE, SOIL_PACKAGE, WATER_PACKAGE
      - subsurface_depth
      - altitude
      - proport_woa_temperature
      - biogas_temperature
      - growth_temperature # BIOSAMPLE, PLANT_PACKAGE
      - biogas_retention_time
      - salinity # BIOSAMPLE, MICROBIAL_MAT_PACKAGE
      - pressure # BIOSAMPLE, HYDROCARBON_CORE_PACKAGE, HYDROCARBON_FS_PACKAGE, MICROBIAL_MAT_PACKAGE, SEDIMENT_PACKAGE, WATER_PACKAGE
      - ph # BIOSAMPLE, HYDROCARBON_CORE_PACKAGE, HYDROCARBON_FS_PACKAGE, MICROBIAL_MAT_PACKAGE, SEDIMENT_PACKAGE, SOIL_PACKAGE, WATER_PACKAGE
      - chlorophyll_concentration
      - nitrate_concentration
      - oxygen_concentration
      - salinity_concentration
      - sample_volume # BIOSAMPLE, PLANT_PACKAGE, SOIL_PACKAGE, WATER_PACKAGE
      - sampling_strategy
      - soluble_iron_micromol
      - subsurface_depth2
      - tot_nitrogen # BIOSAMPLE, MICROBIAL_MAT_PACKAGE, SEDIMENT_PACKAGE, SOIL_PACKAGE, WATER_PACKAGE
      - tot_org_carbon # BIOSAMPLE, SOIL_PACKAGE
    rename_slots:
      - old_name: salinity
        new_name: salinity_category
      - old_name: envo_biome_id
        new_name: env_broad_scale
      - old_name: envo_feature_id
        new_name: env_local_scale
      - old_name: envo_material_id
        new_name: env_medium
      

  soil_package_table:
    id_key: soil_package_id
    data_source:
      file_name: "NMDC_DUMP/SOIL_PACKAGE_DATA_TABLE.dsv" 
      file_type: tsv
      file_archive_name: "../data/GOLD_NMDC_DUMP_10162020.zip"
    subset_cols:
      - soil_package_id
      - soil_agrochem_addition
      - soil_aluminium_sat
      - soil_aluminium_sat_method
      - soil_crop_rotation
      - soil_curr_land_use
      - soil_curr_vegetation
      - soil_curr_vegetation_method
      - soil_drainage_class
      - soil_extreme_event
      - soil_fao_class
      - soil_fire
      - soil_flooding
      - soil_heavy_metals
      - soil_heavy_metals_method
      - soil_horizon
      - soil_horizon_method
      - soil_link_addit_analys
      - soil_link_climate_info
      - soil_local_class
      - soil_local_class_method
      - soil_microbial_biomass
      - soil_microbial_biomass_method
      - soil_misc_param
      - soil_depth
      - soil_ph
      - soil_ph_method
      - soil_pool_dna_extracts
      - soil_prev_land_use
      - soil_prev_land_use_meth
      - soil_profile_position
      - soil_salinity_method
      - soil_sieving
      - soil_slope_aspect
      - soil_slope_gradient
      - soil_texture
      - soil_texture_method
      - soil_tillage
      - soil_tot_n_method
      - soil_type
      - soil_type_method
      - soil_water_content_soil_meth
      - soil_water_content
      - soil_sample_volume
      - sample_weight_dna_ext # rename to soil_sample_weight_dna_ext
      - tot_nitrogen # rename to soil_tot_nitrogen
      - tot_org_carbon # rename to soil_tot_org_carbon
    rename_slots:
      - old_name: sample_weight_dna_ext
        new_name: soil_sample_weight_dna_ext
      - old_name: tot_nitrogen
        new_name: soil_tot_nitrogen
      - old_name: tot_org_carbon
        new_name: soil_tot_org_carbon
      
  water_package_table:
    id_key: water_package_id
    data_source:
      file_name: "NMDC_DUMP/WATER_PACKAGE_DATA_TABLE.dsv" 
      file_type: tsv
      file_archive_name: "../data/GOLD_NMDC_DUMP_10162020.zip"
    subset_cols:
      - water_package_id
      - water_depth
      - water_alkalinity 
      - water_alkalinity_method
      - water_alkyl_diethers
      - water_aminopept_act
      - water_ammonium
      - water_bacterial_carbon_prod
      - water_bishomohopanol
      - water_bromide
      - water_calcium
      - water_carbon_nitrog_ratio
      - water_chem_administration
      - water_chloride
      - water_density
      - water_diether_lipids
      - water_diss_carbon_dioxide
      - water_diss_hydrogen
      - water_diss_inorg_carbon
      - water_diss_inorg_nitro
      - water_diss_inorg_phosphorus
      - water_diss_org_carbon
      - water_diss_org_nitrogen
      - water_glucosidase_activity
      - water_magnesium
      - water_mean_frict_vel
      - water_mean_peak_frict_vel
      - water_misc_parameter
      - water_n_alkanes
      - water_nitrite
      - water_org_matter
      - water_org_nitrogen
      - water_organism_count
      - water_oxy_stat_sample
      - water_part_org_carbon
      - water_perturbation
      - water_petroleum_hydrocarbon
      - water_phaeopigments
      - water_phosplipid_fatt_acid
      - water_potassium
      - water_redox_potential
      - water_samp_store_dur
      - water_samp_store_loc
      - water_samp_store_temp
      - water_sample_weight_dna_ext
      - water_size_frac_low
      - water_size_frac_up
      - water_sodium
      - water_sulfate
      - water_sulfide
      - water_tidal_stage
      - water_tot_depth_water_col
      - water_tot_diss_nitro
      - water_tot_phosphorus
      - water_turbidity

  # ficus_faa_table:
  #   id_key: file_id
  #   data_source:
  #     file_name: "../data/ficus_project_faa.tsv"
  #     file_type: tsv      
  #   append_columns:
  #     - name: processing_institution
  #       value: Environmental Molecular Sciences Lab
  #   rename_slots:
  #     - old_name: file_size
  #       new_name: file_size_bytes

  # ficus_fna_table:
  #   id_key: file_id
  #   data_source:
  #     file_name: "../data/ficus_project_fna.tsv"
  #     file_type: tsv 
  #   append_columns:
  #     - name: processing_institution
  #       value: Environmental Molecular Sciences Lab
  #   rename_slots:
  #     - old_name: file_size
  #       new_name: file_size_bytes

  ficus_fastq_table:
    id_key: file_id
    data_source:
      file_name: "../data/ficus_project_fastq.tsv"
      file_type: tsv      
    append_columns:
      - name: processing_institution
        value: Environmental Molecular Sciences Lab
    rename_slots:
      - old_name: file_size
        new_name: file_size_bytes

  ficus_jgi_emsl:
    id_key: gold_study_id
    data_source:
      file_name: "../data/FICUS - JGI-EMSL Proposal - Gold Study - ID mapping and PI.xlsx"
      file_type: excel

  ficus_emsl:
    id_key: dataset_id
    data_source: 
      file_name: "../data/EMSL_FICUS_project_process_data_export.xlsx"
      file_type: multi-sheet-excel
    append_columns:
      - name: processing_institution
        value: Environmental Molecular Sciences Lab
    rename_slots:
      - old_name: experimental_data_type
        new_name: omics_type
      - old_name: dataset_file_size_bytes
        new_name: file_size_bytes
  
  ficus_emsl_biosample:
    # id_key: dataset_id # since the key is the same as ficus_emsl don't use it
    data_source: 
      file_name: "../data/EMSL_Hess_Stegen_Blanchard_DatasetToMetagenomeMapping.tsv"
      file_type: tsv
    rename_slots:
      - old_name: gold_biosample_id
        new_name: biosample_gold_id
